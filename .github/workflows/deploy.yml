name: Terraform Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write  # Required for uploading SARIF to GitHub Security tab

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: environments/dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055714170174:role/github-action-workflow
          aws-region: us-west-2
          role-session-name: GitHubActions-${{ github.run_id }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure
        
      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Run Checkov (Docker)
        run: |
          mkdir -p checkov-results
          docker run --rm \
            -v ${{ github.workspace }}/environments/dev:/tf \
            bridgecrew/checkov:latest \
            -d /tf \
            --output-file-path /tf/checkov-results/checkov-results.sarif \
            --output-format sarif \
            --soft-fail

      - name: Upload Checkov SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: environments/dev/checkov-results/checkov-results.sarif

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan.binary

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: environments/dev/checkov-results/checkov-results.sarif
          retention-days: 3

      - name: Terraform Apply (manual approval)
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve tfplan.binary

      - name: Cleanup Plan Files
        if: always()
        run: rm -f tfplan.binary
