# This workflow will destroy your Terraform-managed infrastructure.
# ✅ Recommended to trigger this workflow manually (workflow_dispatch) to avoid accidental destruction.

name: Terraform Destroy  # Workflow name visible in the Actions tab

# Trigger only manually from the GitHub Actions UI
on:
  workflow_dispatch:

# Set required permissions for the workflow
permissions:
  id-token: write           # Needed for AWS OIDC authentication
  contents: read            # Required to checkout the repo

# Define the destroy job
jobs:
  terraform-destroy:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu GitHub-hosted runner

    # Default working directory (where your Terraform files are present)
    defaults:
      run:
        working-directory: environments/dev

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Authenticate with AWS using OIDC (secure temporary credentials)
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055714170174:role/github-action-workflow  # Replace with your IAM Role ARN
          aws-region: us-west-2                                                   # Replace with your AWS Region

      # Step 3: Install the Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 4: Initialize Terraform and download the state backend (DynamoDB/S3) configuration
      - name: Terraform Init
        run: terraform init -reconfigure -no-color

      # Step 5: (Optional) Show what Terraform will destroy
      - name: Terraform Plan Destroy
        run: terraform plan -destroy -var-file="terraform.tfvars" -no-color -lock-timeout=30s

      # Step 6: Destroy the Terraform resources
      # ⚠️ This step performs the actual destroy. Keep it only for authorized manual triggers!
      - name: Terraform Destroy (manual approval)
        run: terraform destroy -auto-approve -var-file="terraform.tfvars" -no-color -lock-timeout=30s
