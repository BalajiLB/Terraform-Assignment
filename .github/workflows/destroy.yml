# ------------------------------------------------------------------------------------
# ‚úÖ Terraform Destroy Workflow for GitHub Actions
# This workflow destroys all Terraform-managed infrastructure in the specified environment.
# ‚ö†Ô∏è Run this workflow manually using the GitHub Actions UI to avoid accidental deletion.
# ------------------------------------------------------------------------------------

name: Terraform Destroy  # Name shown in the GitHub Actions UI

# --------------------------------------
# ‚úÖ Trigger type: Manual only
# --------------------------------------
on:
  workflow_dispatch:  # Allows manual trigger from the GitHub Actions "Run workflow" button

# --------------------------------------
# ‚úÖ Set workflow permissions
# --------------------------------------
permissions:
  id-token: write     # Required for AWS OIDC authentication
  contents: read      # Required to checkout the code from the repository

# --------------------------------------
# ‚úÖ Define the destroy job
# --------------------------------------
jobs:
  terraform-destroy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu GitHub-hosted runner

    # Set the default working directory for all 'run' steps
    defaults:
      run:
        working-directory: environments/dev  # Path where your Terraform files are located

    steps:
      # --------------------------------------
      # Step 1: Checkout the repository code
      # --------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # --------------------------------------
      # Step 2: Authenticate with AWS using OIDC
      # --------------------------------------
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055714170174:role/github-action-workflow  # üîë Replace with your AWS IAM Role ARN
          aws-region: us-west-2                                                   # üåé AWS Region where your infra is deployed

      # --------------------------------------
      # Step 3: Install Terraform CLI
      # --------------------------------------
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # --------------------------------------
      # Step 4: Initialize Terraform (downloads providers, reads backend config)
      # --------------------------------------
      - name: Terraform Init
        run: terraform init -reconfigure -no-color

      # --------------------------------------
      # Step 5: Preview what resources would be destroyed (safe preview)
      # --------------------------------------
      - name: Terraform Plan Destroy
        run: terraform plan -destroy -var-file="terraform.tfvars" -no-color -lock-timeout=30s

      # --------------------------------------
      # Step 6: Destroy infrastructure (‚ö†Ô∏è irreversible operation)
      # --------------------------------------
      - name: Confirm destroy operation
        run: echo "üö® Destroying all Terraform-managed infrastructure in environments/dev"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file="terraform.tfvars" -no-color -lock-timeout=30s

      # --------------------------------------
      # ‚úÖ Done. Infra is destroyed.
      # --------------------------------------
